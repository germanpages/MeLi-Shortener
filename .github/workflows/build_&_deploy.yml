name: Build, Test, and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.21.3

    - name: Build
      run: go build -v -o bin/main ./src/main.go
      env:
        GOROOT: /opt/hostedtoolcache/go/1.21.3/x64

  deploy_green:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to Green
      run: npx serverless deploy --stage green
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}

    - name: Set URL_LAMBDA environment variable
      id: set-var
      run: |
        URL_LAMBDA=$(echo "${{ steps.deploy_green.outputs.stdout }}" | grep -o 'https://[^ ]*')
        echo "URL_LAMBDA=$URL_LAMBDA" >> $GITHUB_ENV
  test:
    needs: deploy_green
    runs-on: ubuntu-latest

    steps:
    - name: Run Newman Tests
      run: newman run tests/postman/Shortener.postman_collection.json --env-var "URL_LAMBDA=${{ steps.extract_url.outputs.URL_LAMBDA }}"

  deploy_blue:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to Blue
      run: npx serverless deploy --stage blue
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}

  cleanup:
    if: always()
    needs: [deploy_green, test, deploy_blue]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Remove Green Deployment
      run: npx serverless remove --stage green
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
